{"ast":null,"code":"var _jsxFileName = \"/Users/manikdhiman/Desktop/Programs/Video Streaming Application/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch video list when the component mounts\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  // Function to fetch all video data from the server\n  const fetchVideos = async () => {\n    setIsLoading(true);\n    setError(null); // Reset error before fetching\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/videos\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      const data = await response.json();\n      setVideos(data);\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n      setError(\"There was an issue loading the videos. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Memoize handleVideoClick to avoid unnecessary re-renders\n  const handleVideoClick = useCallback(async filename => {\n    setSelectedVideo(filename);\n    setIsVideoLoading(true);\n    setError(null); // Reset error before fetching\n    const videoStreamUrl = await fetchVideoStream(filename);\n    if (videoStreamUrl) {\n      setVideoUrl(videoStreamUrl);\n    } else {\n      setError(\"Failed to fetch the video stream. Please try again.\");\n    }\n    setIsVideoLoading(false);\n  }, []);\n\n  // Function to fetch video stream URL\n  const fetchVideoStream = async filename => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/video/${filename}`);\n      if (!response.ok) throw new Error(\"Failed to fetch video stream.\");\n      const data = await response.json();\n      if (data.presigned_url) {\n        return data.presigned_url;\n      } else {\n        throw new Error(\"No presigned URL found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching video stream:\", error);\n      setError(\"Error fetching the video stream.\");\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Video Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading videos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : videos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"video-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"video-button\",\n            onClick: () => handleVideoClick(video.filename),\n            children: video.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-videos\",\n      children: \"No videos available. Please try again later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), selectedVideo && videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"video-title\",\n        children: [\"Now Playing: \", selectedVideo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), isVideoLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-video\",\n        children: \"Loading video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          controls: true,\n          width: \"800\",\n          height: \"450\",\n          src: videoUrl,\n          children: \"Your browser does not support the video tag.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Video Specifications:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), \" \", selectedVideo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a6PIuJy1posWMeXyuIjtYry5rXY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","videos","setVideos","selectedVideo","setSelectedVideo","isLoading","setIsLoading","isVideoLoading","setIsVideoLoading","videoUrl","setVideoUrl","error","setError","fetchVideos","response","fetch","ok","Error","data","json","console","handleVideoClick","filename","videoStreamUrl","fetchVideoStream","presigned_url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","video","index","onClick","title","controls","width","height","src","_c","$RefreshReg$"],"sources":["/Users/manikdhiman/Desktop/Programs/Video Streaming Application/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVideoLoading, setIsVideoLoading] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(null);\n  const [error, setError] = useState(null);\n\n  // Fetch video list when the component mounts\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  // Function to fetch all video data from the server\n  const fetchVideos = async () => {\n    setIsLoading(true);\n    setError(null);  // Reset error before fetching\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/videos\");\n      if (!response.ok) throw new Error(\"Failed to fetch video list.\");\n      const data = await response.json();\n      setVideos(data);\n    } catch (error) {\n      console.error(\"Error fetching videos:\", error);\n      setError(\"There was an issue loading the videos. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Memoize handleVideoClick to avoid unnecessary re-renders\n  const handleVideoClick = useCallback(async (filename) => {\n    setSelectedVideo(filename);\n    setIsVideoLoading(true);\n    setError(null);  // Reset error before fetching\n    const videoStreamUrl = await fetchVideoStream(filename);\n    if (videoStreamUrl) {\n      setVideoUrl(videoStreamUrl);\n    } else {\n      setError(\"Failed to fetch the video stream. Please try again.\");\n    }\n    setIsVideoLoading(false);\n  }, []);\n\n  // Function to fetch video stream URL\n  const fetchVideoStream = async (filename) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/video/${filename}`);\n      if (!response.ok) throw new Error(\"Failed to fetch video stream.\");\n      const data = await response.json();\n      if (data.presigned_url) {\n        return data.presigned_url;\n      } else {\n        throw new Error(\"No presigned URL found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching video stream:\", error);\n      setError(\"Error fetching the video stream.\");\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Video Library</h1>\n\n      {/* Show loading state for videos */}\n      {isLoading ? (\n        <p className=\"loading-text\">Loading videos...</p>\n      ) : error ? (\n        <p className=\"error-message\">{error}</p>\n      ) : videos.length > 0 ? (\n        <div className=\"video-list\">\n          <ul>\n            {videos.map((video, index) => (\n              <li key={index} className=\"video-item\">\n                <button className=\"video-button\" onClick={() => handleVideoClick(video.filename)}>\n                  {video.title}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <p className=\"no-videos\">No videos available. Please try again later.</p>\n      )}\n\n      {/* Display selected video player */}\n      {selectedVideo && videoUrl && (\n        <div className=\"video-player\">\n          <h2 className=\"video-title\">Now Playing: {selectedVideo}</h2>\n          {isVideoLoading ? (\n            <p className=\"loading-video\">Loading video...</p>\n          ) : (\n            <div className=\"video-container\">\n              <video controls width=\"800\" height=\"450\" src={videoUrl}>\n                Your browser does not support the video tag.\n              </video>\n            </div>\n          )}\n          \n          {/* Display metadata */}\n          <div className=\"video-metadata\">\n            <h3>Video Specifications:</h3>\n            <ul>\n              <li><strong>Title:</strong> {selectedVideo}</li>\n              {/* Add more metadata fields as needed */}\n              \n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}